---

- set_fact:
    # rds_subnet_ids: "{% for subnet in vpc_subnet.results %}{{ subnet.subnet.id}} {% endfor %}"
    rds_subnet_ids: "{{ vpc_subnet.results|selectattr('subnet.tags.category', 'equalto', 'data')|list|map(attribute='subnet.id')|list }}"

- debug: 
    var: rds_subnet_ids
    verbosity: 1
- debug: 
    var: ec2_security_groups.results
    verbosity: 1

- name: create RDS subnet group
  rds_subnet_group:
    state: present
    region: "{{ region }}"
    name: "{{ envname }}-vpc-rds-subnet-group"
    description: "{{ envname }} vpc subnet group"
    subnets: "{{ rds_subnet_ids }}"

- name: create RDS instance for Postgres
  rds:
    command: create
    region: "{{ region }}"
    size: 50
    instance_name: "{{ envname }}-{{ rds.db_engine }}-db"
    instance_type: "{{ rds.instance_type }}"
    db_engine: "{{ rds.db_engine }}"
    port: "{{ postgres_port }}"
    multi_zone: yes
    db_name: "{{ db_schema }}"
    username: "{{ db_user }}"
    password: "{{ db_password }}"
    subnet: "{{ envname }}-vpc-rds-subnet-group"
    vpc_security_groups: "{{ ec2_security_groups.results | selectattr('item.name', 'equalto', 'allow_postgres') | map(attribute='group_id') | list }}"
    wait: yes # will wait for the instance to be ready.
    wait_timeout: 1200
    tags:
      environment: "{{ envname }}"
      Name: "{{ envname }}-{{ rds.db_engine }}-db"
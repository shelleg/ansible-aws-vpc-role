---
# eu-west-1 / Ireland
region: eu-west-1
availability_zone: eu-west-1a
#ami-2094cf46 - ubuntu 14.04
#ami-ca80a0b9 - ubuntu 16.04
ami: "ami-2094cf46"
gpu_ami: "ami-9af668e9"
nat_ami: "ami-ef76e898"
use_rds: no
aws_s3_bucket_name: "imagestore-bucket"
public_key: '{{ id_rsa_project_ansible_pub }}'
availability_zone: '{{ availability_zone }}'
create_infra_instances: True
load_balanced_roles:
  - name: role1_behind_lb
    # name of the public subnet in the same az as the role1 service private subnet
    lb_subnet_name: public1
    instance_protocol: http
    instance_port: 80
    ssl_certificate_arn: arn:aws:iam::375296840481:server-certificate/linnovate_cert
    stickiness:
      type: loadbalancer
      enabled: yes
      expiration: 300
    health_check:
      ping_protocol: http
      ping_port: 80
      ping_path: /api/v1/heartbeat
      response_timeout: 5
      interval: 10
      unhealthy_threshold: 5
      healthy_threshold: 3
  - name: role2_behind_lb
    # name of the public subnet in the same az as the role1 service private subnet
    lb_subnet_name: public2
    instance_protocol: http
    instance_port: 80
    ssl_certificate_arn: arn:aws:iam::375296840481:server-certificate/linnovate_cert
    stickiness:
      type: loadbalancer
      enabled: yes
      expiration: 300
    health_check:
      ping_protocol: http
      ping_port: 80
      ping_path: /heartbeat
      response_timeout: 30
      interval: 60
      unhealthy_threshold: 5
      healthy_threshold: 3
  
routing_tables:
    - subnet: public
      routes:
          - dest: '{{ cidr_block }}'
            gateway_id: local
          - dest: '0.0.0.0/0'
            gateway_id: "{{ ec2_vpc.igw_id }}"
    - subnet: private
      routes:
          - dest: "{{ cidr_block }}"
            gateway_id: local
          - dest: "0.0.0.0/0"
            instance_id: "{{ nat_instance.tagged_instances.0.id }}"
            
security_groups:
    - description: Allow all from this VPC
      name: allow_vpc
      rules:
          - proto: all
            group_name: allow_vpc
    - description: Allow SSH
      name: allow_ssh
      rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
    - description: Allow all from office
      name: allow_office
      rules:
          - proto: all
            cidr_ip: "{{ office_ip }}/32" # office IP.
          # - proto: all
          #   cidr_ip: 111.111.111.111/32 # Someone's IP at home.
    - description: Web load balancer
      name: web_lb
      rules:
          # - proto: tcp
          #   cidr_ip: 0.0.0.0/0
          #   from_port: 80
          #   to_port: 80
          - proto: tcp
            cidr_ip: 0.0.0.0/0
            from_port: 443
            to_port: 443
